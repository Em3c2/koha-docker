140 - Koha API Messagepreferences Patch
Patch against Koha $GITREF 9648cd2917f4b530c9da9b39e4fe606e457511a2
curl -s -o koha.tar.gz https://codeload.github.com/Koha-Community/Koha/legacy.tar.gz/9648cd2917f4b530c9da9b39e4fe606e457511a2
or https://github.com/Koha-Community/Koha/archive/v16.05.00-beta.tar.gz

prerequisites:
# LOCAL 120 - Koha API Items Patch

diff --git a/Koha/REST/V1/Messagepreference.pm b/Koha/REST/V1/Messagepreference.pm
new file mode 100644
index 0000000..e73d0a6
--- /dev/null
+++ b/Koha/REST/V1/Messagepreference.pm
@@ -0,0 +1,104 @@
+package Koha::REST::V1::Messagepreference;
+
+# This file is part of Koha.
+#
+# Koha is free software; you can redistribute it and/or modify it under the
+# terms of the GNU General Public License as published by the Free Software
+# Foundation; either version 3 of the License, or (at your option) any later
+# version.
+#
+# Koha is distributed in the hope that it will be useful, but WITHOUT ANY
+# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
+# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License along
+# with Koha; if not, write to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+use Modern::Perl;
+
+use Mojo::Base 'Mojolicious::Controller';
+
+use Koha::Patrons;
+use C4::Members::Messaging;
+use Data::Dumper;
+
+# GET /messagepreferences/{borrowernumber}
+# GET /messagepreferences/{borrowernumber}/{message_name}
+sub get {
+    my ($c, $args, $cb) = @_;
+
+    my $patron = Koha::Patrons->find($args->{borrowernumber});
+    unless ($patron) {
+        return $c->$cb({error => "Patron not found"}, 404);
+    }
+
+    my $message_prefs = getMessagingPrefs($args->{borrowernumber});
+
+    return $c->$cb($message_prefs, 200);
+}
+
+# PUT /messagepreferences/{borrowernumber}
+# JSON BODY params example:
+#   "item_due": {          (valid keys are : item_due, advance_notice, hold_filled, item_check_in, item_checkout )
+#     "transports": ["sms", "email"],
+#     days_in_advance: 5
+#     wants_digest: true
+#   },
+sub set {
+    my ($c, $args, $cb) = @_;
+
+    my $body = $c->req->json;
+    warn Dumper($body);
+
+    my $patron = Koha::Patrons->find($args->{borrowernumber});
+    unless ($patron) {
+        return $c->$cb({error => "Patron not found"}, 404);
+    }
+
+    my $opts = getMessagingOptionsMap();
+    while ( my ($k, $v) = each %{$body} ) {
+        warn Dumper($k);
+        my $new_message_preferences = C4::Members::Messaging::SetMessagingPreference({
+            borrowernumber => $args->{borrowernumber},
+            message_attribute_id => $opts->{$k}->{message_attribute_id},
+            message_transport_types => $v->{transports} || [],
+            days_in_advance => $v->{days_in_advance} || '0',
+            wants_digest => $v->{wants_digest} || '0'
+        });
+    }
+    # get new prefs
+    my $message_prefs = getMessagingPrefs($args->{borrowernumber});
+    return $c->$cb($message_prefs, 200);
+}
+
+sub setdefaults {
+    # TODO: method to set patron message preferences to category defaults
+    # C4::Members::Messaging::SetMessagingPreferencesFromDefaults( { borrowernumber, categorycode } );
+}
+
+sub getMessagingPrefs {
+    my $borrowernumber = shift(@_);
+
+    my $message_types = getMessagingOptionsMap();
+    my $message_prefs = {};
+    foreach my $msg ( keys %{$message_types} ) {
+        my $pref = C4::Members::Messaging::GetMessagingPreferences({
+            borrowernumber => $borrowernumber,
+            message_name => $msg
+        });
+        $message_prefs->{lc $msg} = $pref;
+    }
+    return $message_prefs;
+}
+
+sub getMessagingOptionsMap {
+    my $msg_opts = C4::Members::Messaging::GetMessagingOptions();
+    my %map;
+    foreach ( @{$msg_opts} ) {
+        $map{lc $_->{message_name}} = $_;
+    }
+    return \%map;
+}
+
+1;
diff --git a/api/v1/swagger/paths.json b/api/v1/swagger/paths.json
index 0c01289..413db59 100644
--- a/api/v1/swagger/paths.json
+++ b/api/v1/swagger/paths.json
@@ -40,5 +40,8 @@
   },
   "/biblios/{biblionumber}/expanded": {
     "$ref": "paths/biblios.json#/~1biblios~1{biblionumber}~1expanded"
+  },
+  "/messagepreferences/{borrowernumber}": {
+    "$ref": "paths/messagepreferences.json#/~1messagepreferences~1{borrowernumber}"
   }
 }
diff --git a/api/v1/swagger/paths/messagepreferences.json b/api/v1/swagger/paths/messagepreferences.json
new file mode 100644
index 0000000..3940eff
--- /dev/null
+++ b/api/v1/swagger/paths/messagepreferences.json
@@ -0,0 +1,47 @@
+{
+  "/messagepreferences/{borrowernumber}": {
+    "get": {
+      "operationId": "getMessagepreferencesByUser",
+      "tags": ["patrons", "messages"],
+      "parameters": [
+        {
+          "$ref": "../parameters.json#/borrowernumberPathParam"
+        }
+      ],
+      "produces": ["application/json"],
+      "responses": {
+        "200": {
+          "description": "Patron message preferences"
+        },
+        "404": {
+          "description": "Patron not found",
+          "schema": {
+            "$ref": "../definitions.json#/error"
+          }
+        }
+      }
+    },
+    "put": {
+      "operationId": "setMessagepreferencesByUser",
+      "tags": ["patrons", "messages"],
+      "parameters": [
+        {
+          "$ref": "../parameters.json#/borrowernumberPathParam"
+        }
+      ],
+      "consumes": ["application/json"],
+      "produces": ["application/json"],
+      "responses": {
+        "200": {
+          "description": "Patron message preferences"
+        },
+        "404": {
+          "description": "Patron not found",
+          "schema": {
+            "$ref": "../definitions.json#/error"
+          }
+        }
+      }
+    }
+  }
+}
