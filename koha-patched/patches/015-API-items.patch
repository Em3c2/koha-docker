diff --git a/Koha/REST/V1/Item.pm b/Koha/REST/V1/Item.pm
new file mode 100644
index 0000000..ee7eb73
--- /dev/null
+++ b/Koha/REST/V1/Item.pm
@@ -0,0 +1,49 @@
+package Koha::REST::V1::Item;
+
+# This file is part of Koha.
+#
+# Koha is free software; you can redistribute it and/or modify it under the
+# terms of the GNU General Public License as published by the Free Software
+# Foundation; either version 3 of the License, or (at your option) any later
+# version.
+#
+# Koha is distributed in the hope that it will be useful, but WITHOUT ANY
+# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
+# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License along
+# with Koha; if not, write to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+use Modern::Perl;
+
+use Mojo::Base 'Mojolicious::Controller';
+
+use C4::Auth qw( haspermission );
+use Koha::AuthUtils qw(hash_password);
+use Koha::Libraries;
+use Koha::Biblios;
+use Koha::Items;
+use C4::Biblio qw( GetBiblioFromItemNumber );
+
+sub get {
+    my ($c, $args, $cb) = @_;
+
+    my $item = Koha::Items->find($args->{itemnumber});
+    unless ($item) {
+        return $c->$cb({error => "Item not found"}, 404);
+    }
+    return $c->$cb($item->unblessed, 200);
+}
+
+sub getbiblio {
+    my ($c, $args, $cb) = @_;
+
+    my $item = &GetBiblioFromItemNumber($args->{itemnumber});
+    unless ($item) {
+        return $c->$cb({error => "Item not found"}, 404);
+    }
+    return $c->$cb($item, 200);
+}
+
+1;
diff --git a/api/v1/definitions/index.json b/api/v1/definitions/index.json
index f7ab98a..11c67c5 100644
--- a/api/v1/definitions/index.json
+++ b/api/v1/definitions/index.json
@@ -6,5 +6,7 @@
     "checkout": { "$ref": "checkout.json" },
     "libraries": { "$ref": "libraries.json" },
     "library": { "$ref": "library.json" },
+    "items": { "$ref": "items.json" },
+    "item": { "$ref": "item.json" },
     "error": { "$ref": "error.json" }
 }
diff --git a/api/v1/definitions/item.json b/api/v1/definitions/item.json
new file mode 100644
index 0000000..beab11a
--- /dev/null
+++ b/api/v1/definitions/item.json
@@ -0,0 +1,181 @@
+{
+    "type": "object",
+    "properties": {
+    "barcode": {
+      "type": ["string"],
+      "description": "Unique external ID of item (MARC21 952$p)"
+    },
+    "biblioitemnumber": {
+      "type": ["integer"],
+      "description": "foreign key from the biblioitems table to link to item to additional information"
+    },
+    "biblionumber": {
+      "type": ["integer"],
+      "description": "foreign key from biblio table used to link this item to the right bib record"
+    },
+    "booksellerid": {
+      "type": ["string", "null"],
+      "description": "where the item was purchased (MARC21 952$e)"
+    },
+    "ccode": {
+      "type": ["string", "null"],
+      "description": "authorized value for the collection code associated with this item (MARC21 952$8)"
+    },
+    "cn_sort": {
+      "type": ["string", "null"],
+      "description": "Sorting Rule"
+    },
+    "cn_source": {
+      "type": ["string", "null"],
+      "description": "classification source used on this item (MARC21 952$2)"
+    },
+    "coded_location_qualifier": {
+      "type": ["string", "null"],
+      "description": "coded location qualifier(MARC21 952$f)"
+    },
+    "copynumber": {
+      "type": ["string", "null"],
+      "description": "copy number (MARC21 952$t)"
+    },
+    "damaged": {
+      "type": ["integer"],
+      "description": "authorized value defining this item as damaged (MARC21 952$4)"
+    },
+    "dateaccessioned": {
+      "type": ["string", "null"],
+      "description": "date the item was acquired or added to Koha (MARC21 952$d)"
+    },
+    "datelastborrowed": {
+      "type": ["string", "null"],
+      "description": "the date the item was last checked out/issued"
+    },
+    "datelastseen": {
+      "type": ["string", "null"],
+      "description": "the last time the barcode was scanned or inventory was done"
+    },
+    "enumchron": {
+      "type": ["string", "null"],
+      "description": "serial enumeration/chronology for the item (MARC21 952$h)"
+    },
+    "holdingbranch": {
+      "type": ["string"],
+      "description": "the library that is currently in possession item (MARC21 952$b)"
+    },
+    "homebranch": {
+      "type": ["string"],
+      "description": "the library that owns this item (MARC21 952$a)"
+    },
+    "issues": {
+      "type": ["integer", "null"],
+      "description": "number of times this item has been checked out/issued"
+    },
+    "itemcallnumber": {
+      "type": ["string", "null"],
+      "description": "call number for this item (MARC21 952$o)"
+    },
+    "itemlost": {
+      "type": ["integer"],
+      "description": "authorized value defining this item as lost (MARC21 952$1)"
+    },
+    "itemlost_on": {
+      "type": ["string", "null"],
+      "description": "the date and time an item was last marked as lost, NULL if not lost"
+    },
+    "itemnotes": {
+      "type": ["string", "null"],
+      "description": "public notes on this item (MARC21 952$x)"
+    },
+    "itemnotes_nonpublic": {
+      "type": ["string", "null"],
+      "description": "non public notes on this item"
+    },
+    "itemnumber": {
+      "type": ["integer"],
+      "description": "Unique internal identifier"
+    },
+    "itype": {
+      "type": ["string", "null"],
+      "description": "the type for this item"
+    },
+    "location": {
+      "type": ["string", "null"],
+      "description": "authorized value for the shelving location for this item (MARC21 952$c)"
+    },
+    "materials": {
+      "type": ["string", "null"],
+      "description": "materials specified (MARC21 952$3)"
+    },
+    "more_subfields_xml": {
+      "type": ["string", "null"],
+      "description": "additional 952 subfields in XML format"
+    },
+    "new_status": {
+      "type": ["string", "null"],
+      "description": "?"
+    },
+    "notforloan": {
+      "type": ["integer"],
+      "description": "authorized value defining why this item is not for loan (MARC21 952$7)"
+    },
+    "onloan": {
+      "type": ["string", "null"],
+      "description": "checked out date (NULL for not checked out)"
+    },
+    "paidfor": {
+      "type": ["string", "null"],
+      "description": "?"
+    },
+    "permanent_location": {
+      "type": ["string", "null"],
+      "description": "the permanent shelving location"
+    },
+    "price": {
+      "type": ["string", "null"],
+      "description": "purchase price (MARC21 952$g)"
+    },
+    "renewals": {
+      "type": ["integer", "null"],
+      "description": "number of times this item has been renewed"
+    },
+    "replacementprice": {
+      "type": ["string", "null"],
+      "description": "cost the library charges to replace the item if it has been marked lost (MARC21 952$v)"
+    },
+    "replacementpricedate": {
+      "type": ["string", "null"],
+      "description": "the date the price is effective from (MARC21 952$w)"
+    },
+    "reserves": {
+      "type": ["integer", "null"],
+      "description": "number of times this item has been placed on hold/reserved"
+    },
+    "restricted": {
+      "type": ["string", "null"],
+      "description": "authorized value defining use restrictions for this item (MARC21 952$5)"
+    },
+    "stack": {
+      "type": ["integer"],
+      "description": "?"
+    },
+    "stocknumber": {
+      "type": ["string", "null"],
+      "description": "inventory number (MARC21 952$i)"
+    },
+    "timestamp": {
+      "type": ["string"],
+      "description": "date and time this item was last altered"
+    },
+    "uri": {
+      "type": ["string", "null"],
+      "description": "URI for the item (MARC21 952$u)"
+    },
+    "withdrawn": {
+      "type": ["integer"],
+      "description": "authorized value defining this item as withdrawn (MARC21 952$0)"
+    },
+    "withdrawn_on": {
+      "type": ["string", "null"],
+      "description": "date and time an item was last marked as withdrawn, NULL if not withdrawn"
+    }
+  }
+}
diff --git a/api/v1/definitions/items.json b/api/v1/definitions/items.json
new file mode 100644
index 0000000..8d7ccaa
--- /dev/null
+++ b/api/v1/definitions/items.json
@@ -0,0 +1,5 @@
+{
+    "type": "array",
+    "items": { "$ref": "item.json" }
+}
+
diff --git a/api/v1/swagger.json b/api/v1/swagger.json
index 6c2c289..db5fb8e 100644
--- a/api/v1/swagger.json
+++ b/api/v1/swagger.json
@@ -274,6 +274,59 @@
           }
         }
       }
+    },
+    "/items/{itemnumber}": {
+      "get": {
+        "operationId": "getItem",
+        "tags": ["items"],
+        "parameters": [
+          { "$ref": "#/parameters/itemnumberPathParam" }
+        ],
+        "produces": [
+          "application/json"
+        ],
+        "responses": {
+          "200": {
+            "description": "An item"
+          },
+          "403": {
+            "description": "Access forbidden",
+            "schema": {
+              "$ref": "#/definitions/error"
+            }
+          },
+          "404": {
+            "description": "Item not found",
+            "schema": {
+              "$ref": "#/definitions/error"
+            }
+          }
+        }
+      }
+    },
+    "/items/{itemnumber}/biblio": {
+      "get": {
+        "operationId": "getbiblioByItem",
+        "tags": ["biblios"],
+        "parameters": [
+          { "$ref": "#/parameters/itemnumberPathParam" }
+        ],
+        "produces": [
+          "application/json"
+        ],
+        "responses": {
+          "200": {
+            "description": "A full biblio record"
+
+          },
+          "403": {
+            "description": "Access forbidden",
+            "schema": {
+              "$ref": "#/definitions/error"
+            }
+          }
+        }
+      }
     }
   },
   "definitions": {
@@ -300,6 +353,13 @@
       "description": "Internal library identifier",
       "required": true,
       "type": "string"
+    },
+    "itemnumberPathParam": {
+      "name": "itemnumber",
+      "in": "path",
+      "description": "Internal item identifier",
+      "required": true,
+      "type": "integer"
     }
   }
 }
