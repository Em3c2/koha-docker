050-API_NL_lookup_and_defaults

Patch to extend API to check if existing user locally and in the Norwegian Patron DB. 
Also route to set patron sync defaults and extended patron attribute

diff --git a/api/v1/swagger.json b/api/v1/swagger.json
index 865191b..8615cd3 100644
--- a/api/v1/swagger.json
+++ b/api/v1/swagger.json
@@ -970,6 +970,103 @@
           }
         }
       }
+    },
+    "/checkexistinguser": {
+      "get": {
+        "operationId": "existingusersInNorwegianPatronDB",
+        "tags": ["patrons", "norwegianpatrondb"],
+        "parameters": [
+          {
+            "name": "surname",
+            "in": "query",
+            "description": "Last name of patron",
+            "type": "string"
+          },
+          {
+            "name": "firstname",
+            "in": "query",
+            "description": "First name of patron",
+            "type": "string"
+          },
+          {
+            "name": "dateofbirth",
+            "in": "query",
+            "description": "Birth date of patron",
+            "type": "string"
+          },
+          {
+            "name": "ssn",
+            "in": "query",
+            "description": "Social security number",
+            "type": "string"
+          }
+        ],
+        "responses": {
+          "200": {
+            "description": "Result of search with given params"
+          },
+          "400": {
+            "description": "Error in lookup",
+            "schema": {
+              "$ref": "#/definitions/error"
+            }
+          },
+          "403": {
+            "description": "Access forbidden",
+            "schema": {
+              "$ref": "#/definitions/error"
+            }
+          }
+        }
+      }
+    },
+    "/patronsyncdefaults/{borrowernumber}": {
+      "put": {
+        "operationId": "setpatrondefaultsInNorwegianPatronDB",
+        "tags": ["patrons"],
+        "parameters": [
+          {
+            "$ref": "#/parameters/borrowernumberPathParam"
+          },
+          {
+            "name": "ssn",
+            "in": "query",
+            "description": "Social security number",
+            "type": "string"
+          },
+          {
+            "name": "password",
+            "in": "query",
+            "description": "Personal password",
+            "type": "string"
+          }
+        ],
+        "consumes": ["application/json"],
+        "produces": ["application/json"],
+        "responses": {
+          "200": {
+            "description": "Success setting patron defaults"
+          },
+          "400": {
+            "description": "Error setting patron sync defaults",
+            "schema": {
+              "$ref": "#/definitions/error"
+            }
+          },
+          "403": {
+            "description": "Access forbidden",
+            "schema": {
+              "$ref": "#/definitions/error"
+            }
+          },
+          "404": {
+            "description": "Patron not found",
+            "schema": {
+              "$ref": "#/definitions/error"
+            }
+          }
+        }
+      }
     }
   },
   "definitions": {
diff --git a/Koha/REST/V1/NorwegianPatronDB.pm b/Koha/REST/V1/NorwegianPatronDB.pm
new file mode 100644
index 0000000..d6cef38
--- /dev/null
+++ b/Koha/REST/V1/NorwegianPatronDB.pm
@@ -0,0 +1,101 @@
+package Koha::REST::V1::NorwegianPatronDB;
+
+# This file is part of Koha.
+#
+# Koha is free software; you can redistribute it and/or modify it under the
+# terms of the GNU General Public License as published by the Free Software
+# Foundation; either version 3 of the License, or (at your option) any later
+# version.
+#
+# Koha is distributed in the hope that it will be useful, but WITHOUT ANY
+# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
+# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License along
+# with Koha; if not, write to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+use Modern::Perl;
+
+use Mojo::Base 'Mojolicious::Controller';
+
+use C4::Auth qw( haspermission );
+use Koha::AuthUtils qw(hash_password);
+use Koha::NorwegianPatronDB qw( NLSearch NLEncryptPIN );
+use Koha::Patrons;
+use Koha::Patron::Syncs;
+use C4::Members::Attributes qw( SetBorrowerAttributes );
+use Koha::Database;
+use Data::Dumper;
+
+# Check if user exists in local db or central NL db
+# TODO: Rewrite to use params, so swagger can validate input
+sub existingusers {
+    my ($c, $args, $cb) = @_;
+
+    my $user = $c->stash('koha.user');
+    unless ($user && haspermission($user->userid, {borrowers => 1})) {
+       return $c->$cb({error => "You don't have the required permission"}, 403);
+    }
+    my $response = {
+        count => 0,
+        localdb => 0,
+        centraldb => 0,
+        message => ""
+    };
+
+    # lookup by birthdate, name and/or ssn
+    my $params = $c->req->query_params->to_hash;
+
+    # local lookup
+    my $localpatrons = Koha::Patrons->search({
+        surname => $params->{surname},
+        firstname => $params->{firstname},
+        dateofbirth => $params->{dateofbirth}
+    })->unblessed;
+
+    if (scalar(@$localpatrons) > 0) {
+        $response->{localdb} = scalar(@$localpatrons);
+        $response->{count} += $response->{localdb};
+        $response->{message} .= "User(s) found in local db. ";
+    }
+
+    # norwegian Patron DB lookup
+    my $res = &NLSearch($params->{ssn});
+    unless ($res->fault) {
+        my $nl = $res->result();
+        $response->{centraldb} = int($nl->{'antall_treff'});
+        $response->{count} += $response->{centraldb};
+        $response->{message} .= "Result from central lookup: $nl->{'melding'}. ";
+        return $c->$cb($response, 200);
+    } else {
+        return $c->$cb({error => "Error in call against Norwegian Patron Database"}, 400);
+    }
+}
+
+# Add default sync settings to central NL db and extended patron attributes
+# PUT params: borrowernumber, ssn, password
+sub setpatrondefaults {
+    my ($c, $args, $cb) = @_;
+
+    my $user = $c->stash('koha.user');
+    unless ($user && ( $user->borrowernumber == $args->{borrowernumber}
+        || haspermission($user->userid, {borrowers => 1}) ) )
+    {
+        return $c->$cb({error => "You don't have the required permission"}, 403);
+    }
+    my $sync = Koha::Patron::Syncs->find_or_create({
+      borrowernumber => $args->{borrowernumber},
+      synctype       => 'norwegianpatrondb',
+      sync           => 1,
+      syncstatus     => 'new',
+      hashed_pin     => &NLEncryptPIN( $args->{password} ),
+    });
+    my $success = &SetBorrowerAttributes($args->{borrowernumber}, [ {code => 'fnr', value => $args->{ssn}} ]);
+    if (!$success) {
+        return $c->$cb({error => "Unable to set patron extended attributes"}, 400);
+    }
+    return $c->$cb({}, 200);
+}
+
+1;
